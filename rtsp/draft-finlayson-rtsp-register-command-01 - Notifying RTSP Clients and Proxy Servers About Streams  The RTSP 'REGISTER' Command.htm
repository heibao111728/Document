<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head profile="http://dublincore.org/documents/2008/08/04/dc-html/">
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta name="robots" content="index,follow">
    <meta name="creator" content="rfcmarkup version 1.115">
    <link rel="schema.DC" href="http://purl.org/dc/elements/1.1/">
<meta name="DC.Identifier" content="urn:ietf:id:finlayson-rtsp-register-command">
<meta name="DC.Description.Abstract" content="We define a new RTSP command - named &quot;REGISTER&quot; - that allows a server
(or a third party) to notify a RTSP client or a RTSP proxy server
about a RTSP stream (given by a &quot;rtsp://&quot; URL). This also provides a
mechanism whereby a client (or proxy server) on the public Internet
can access a RTSP server that is behind a firewall or NAT.">
<meta name="DC.Creator" content="Ross Finlayson &lt;finlayson@live555.com&gt;">
<meta name="DC.Date.Issued" content="2014-10-18">
<meta name="DC.Title" content="Notifying RTSP Clients and Proxy Servers About Streams: The RTSP &quot;REGISTER&quot; Command">

    <link rel="icon" href="http://tools.ietf.org/images/id.png" type="image/png">
    <link rel="shortcut icon" href="http://tools.ietf.org/images/id.png" type="image/png">
    <title>draft-finlayson-rtsp-register-command-01 - Notifying RTSP Clients and Proxy Servers About Streams: The RTSP "REGISTER" Command</title>
    
    
    <style type="text/css">
	@media only screen 
	  and (min-width: 992px)
	  and (max-width: 1199px) {
	    body { font-size: 14pt; }
            div.content { width: 96ex; margin: 0 auto; }
        }
	@media only screen 
	  and (min-width: 768px)
	  and (max-width: 991px) {
            body { font-size: 14pt; }
            div.content { width: 96ex; margin: 0 auto; }
        }
	@media only screen 
	  and (min-width: 480px)
	  and (max-width: 767px) {
            body { font-size: 11pt; }
            div.content { width: 96ex; margin: 0 auto; }
        }
	@media only screen 
	  and (max-width: 479px) {
            body { font-size: 8pt; }
            div.content { width: 96ex; margin: 0 auto; }
        }
	@media only screen 
	  and (min-device-width : 375px) 
	  and (max-device-width : 667px) {
            body { font-size: 9.5pt; }
            div.content { width: 96ex; margin: 0 1px; }
        }
	@media only screen 
	  and (min-device-width: 1200px) {
            body { font-size: 10pt; margin: 0 4em; }
            div.content { width: 96ex; margin: 0; }
        }
        h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 {
	    font-weight: bold;
            line-height: 0pt;
            display: inline;
            white-space: pre;
            font-family: monospace;
            font-size: 1em;
	    font-weight: bold;
        }
        pre {
            font-size: 1em;
            margin-top: 0px;
            margin-bottom: 0px;
        }
	.pre {
	    white-space: pre;
	    font-family: monospace;
	}
	.header{
	    font-weight: bold;
	}
        .newpage {
            page-break-before: always;
        }
        .invisible {
            text-decoration: none;
            color: white;
        }
        a.selflink {
          color: black;
          text-decoration: none;
        }
        @media print {
            body {
                font-family: monospace;
                font-size: 10.5pt;
            }
            h1, h2, h3, h4, h5, h6 {
                font-size: 1em;
            }
        
            a:link, a:visited {
                color: inherit;
                text-decoration: none;
            }
            .noprint {
                display: none;
            }
        }
	@media screen {
	    .grey, .grey a:link, .grey a:visited {
		color: #777;
	    }
            .docinfo {
                background-color: #EEE;
            }
            .top {
                border-top: 7px solid #EEE;
            }
            .bgwhite  { background-color: white; }
            .bgred    { background-color: #F44; }
            .bggrey   { background-color: #666; }
            .bgbrown  { background-color: #840; }            
            .bgorange { background-color: #FA0; }
            .bgyellow { background-color: #EE0; }
            .bgmagenta{ background-color: #F4F; }
            .bgblue   { background-color: #66F; }
            .bgcyan   { background-color: #4DD; }
            .bggreen  { background-color: #4F4; }

            .legend   { font-size: 90%; }
            .cplate   { font-size: 70%; border: solid grey 1px; }
	}
    </style>
    <!--[if IE]>
    <style>
    body {
       font-size: 13px;
       margin: 10px 10px;
    }
    </style>
    <![endif]-->

    <script type="text/javascript"><!--
    function addHeaderTags() {
	var spans = document.getElementsByTagName("span");
	for (var i=0; i < spans.length; i++) {
	    var elem = spans[i];
	    if (elem) {
		var level = elem.getAttribute("class");
                if (level == "h1" || level == "h2" || level == "h3" || level == "h4" || level == "h5" || level == "h6") {
                    elem.innerHTML = "<"+level+">"+elem.innerHTML+"</"+level+">";		
                }
	    }
	}
    }
    var legend_html = "Colour legend:<br />      <table>         <tr><td>Unknown:</td>                   <td><span class='cplate bgwhite'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>         <tr><td>Draft:</td>                     <td><span class='cplate bgred'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>         <tr><td>Informational:</td>             <td><span class='cplate bgorange'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>         <tr><td>Experimental:</td>              <td><span class='cplate bgyellow'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>         <tr><td>Best Common Practice:</td>      <td><span class='cplate bgmagenta'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>         <tr><td>Proposed Standard:</td>         <td><span class='cplate bgblue'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>         <tr><td>Draft Standard (old designation):</td> <td><span class='cplate bgcyan'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>         <tr><td>Internet Standard:</td>         <td><span class='cplate bggreen'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>         <tr><td>Historic:</td>                  <td><span class='cplate bggrey'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>         <tr><td>Obsolete:</td>                  <td><span class='cplate bgbrown'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>     </table>";
    function showElem(id) {
        var elem = document.getElementById(id);
        elem.innerHTML = eval(id+"_html");
        elem.style.visibility='visible';
    }
    function hideElem(id) {
        var elem = document.getElementById(id);
        elem.style.visibility='hidden';        
        elem.innerHTML = "";
    }
    // -->
    </script>
</head>
<body onload="addHeaderTags()">
  <div class="content">
   <div style="height: 13px;">
      <div onmouseover="this.style.cursor='pointer';" onclick="showElem('legend');" onmouseout="hideElem('legend')" style="height: 6px; position: absolute; cursor: pointer;" class="pre noprint docinfo bgred" title="Click for colour legend.">                                                                        </div>
      <div id="legend" class="docinfo noprint pre legend" style="position:absolute; top: 4px; left: 4ex; visibility:hidden; background-color: white; padding: 4px 9px 5px 7px; border: solid #345 1px; " onmouseover="showElem('legend');" onmouseout="hideElem('legend');"></div>
   </div>
<span class="pre noprint docinfo top">[<a href="http://tools.ietf.org/html/" title="Document search and retrieval page">Docs</a>] [<a href="https://tools.ietf.org/id/draft-finlayson-rtsp-register-command-01.txt" title="Plaintext version of this document">txt</a>|<a href="http://tools.ietf.org/pdf/draft-finlayson-rtsp-register-command-01.txt" title="PDF version of this document">pdf</a>] [<a href="https://datatracker.ietf.org/doc/draft-finlayson-rtsp-register-command" title="IESG Datatracker information for this document">Tracker</a>] [<a href="mailto:draft-finlayson-rtsp-register-command@tools.ietf.org?subject=draft-finlayson-rtsp-register-command%20" title="Send email to the document authors">Email</a>] [<a href="http://tools.ietf.org/rfcdiff?difftype=--hwdiff&amp;url2=draft-finlayson-rtsp-register-command-01.txt" title="Inline diff (wdiff)">Diff1</a>] [<a href="http://tools.ietf.org/rfcdiff?url2=draft-finlayson-rtsp-register-command-01.txt" title="Side-by-side diff">Diff2</a>] [<a href="http://tools.ietf.org/idnits?url=https://tools.ietf.org/id/draft-finlayson-rtsp-register-command-01.txt" title="Run an idnits check of this document">Nits</a>]               </span><br>
<span class="pre noprint docinfo">                                                                        </span><br>
<span class="pre noprint docinfo">Versions: <a href="http://tools.ietf.org/html/draft-finlayson-rtsp-register-command-00">00</a> <a href="http://tools.ietf.org/html/draft-finlayson-rtsp-register-command-01">01</a> <a href="http://tools.ietf.org/html/draft-finlayson-rtsp-register-command-02">02</a>                                                      </span><br>
<span class="pre noprint docinfo">                                                                        </span><br>
<pre>Internet Engineering Task Force                             R. Finlayson
Internet-Draft                                       Live Networks, Inc.
Intended status: Informational                            April 17, 2014
Expires: October 19, 2014


    <span class="h1"><h1>Notifying RTSP Clients and Proxy Servers About Streams: The RTSP</h1></span>
                           <span class="h1"><h1>"REGISTER" Command</h1></span>
                <span class="h1"><h1>draft-finlayson-rtsp-register-command-01</h1></span>

Abstract

   We define a new RTSP command - named "REGISTER" - that allows a
   server (or a third party) to notify a RTSP client or a RTSP proxy
   server about a RTSP stream (given by a "rtsp://" URL).  This also
   provides a mechanism whereby a client (or proxy server) on the public
   Internet can access a RTSP server that is behind a firewall or NAT.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of <a href="http://tools.ietf.org/html/bcp78">BCP 78</a> and <a href="http://tools.ietf.org/html/bcp79">BCP 79</a>.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at <a href="http://datatracker.ietf.org/drafts/current/">http://datatracker.ietf.org/drafts/current/</a>.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on October 19, 2014.

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.












<span class="grey">Finlayson               Expires October 19, 2014                [Page 1]</span></pre>
<hr class="noprint" style="width: 96ex;" align="left"><!--NewPage--><pre class="newpage"><a name="page-2" id="page-2" href="#page-2" class="invisible"> </a>
<span class="grey">Internet-Draft         The RTSP "REGISTER" Command            April 2014</span>


   This document is subject to <a href="http://tools.ietf.org/html/bcp78">BCP 78</a> and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (<a href="http://trustee.ietf.org/license-info">http://trustee.ietf.org/license-info</a>) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in <a href="#section-4">Section 4</a>.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   <a href="#section-1">1</a>.  Requirements Language . . . . . . . . . . . . . . . . . . . .   <a href="#page-2">2</a>
   <a href="#section-2">2</a>.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   <a href="#page-2">2</a>
   <a href="#section-3">3</a>.  An Example  . . . . . . . . . . . . . . . . . . . . . . . . .   <a href="#page-3">3</a>
   <a href="#section-4">4</a>.  Optional Transport Parameters . . . . . . . . . . . . . . . .   <a href="#page-4">4</a>
   <a href="#section-5">5</a>.  Comparison with the "ANNOUNCE" command  . . . . . . . . . . .   <a href="#page-5">5</a>
   <a href="#section-6">6</a>.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   <a href="#page-5">5</a>
   <a href="#section-7">7</a>.  Security Considerations . . . . . . . . . . . . . . . . . . .   <a href="#page-6">6</a>
   <a href="#section-8">8</a>.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   <a href="#page-6">6</a>
     <a href="#section-8.1">8.1</a>.  Normative References  . . . . . . . . . . . . . . . . . .   <a href="#page-6">6</a>
     <a href="#section-8.2">8.2</a>.  Informative References  . . . . . . . . . . . . . . . . .   <a href="#page-7">7</a>
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   <a href="#page-7">7</a>

<span class="h2"><h2><a class="selflink" name="section-1" href="#section-1">1</a>.  Requirements Language</h2></span>

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [<a href="http://tools.ietf.org/html/rfc2119" title="&quot;Key words for use in RFCs to Indicate Requirement Levels&quot;">RFC2119</a>].

<span class="h2"><h2><a class="selflink" name="section-2" href="#section-2">2</a>.  Introduction</h2></span>

   The Real Time Streaming Protocol (RTSP) [<a href="http://tools.ietf.org/html/rfc2326" title="&quot;Real Time Streaming Protocol (RTSP)&quot;">RFC2326</a>] is used primarily
   by a client to access a server's multimedia stream - specified by a
   "rtsp://" URL.  The client is assumed to know the stream's URL in
   advance; the RTSP protocol does not specify any mechanism by which a
   client can be informed of the stream's URL.

   This document defines an optional new RTSP command - named "REGISTER"
   - that allows a server (or a third party) to notify a RTSP client or
   a RTSP proxy server about a RTSP stream (given by a "rtsp://" URL).
   (Note that this command is defined only when sent to a RTSP client
   (or a proxy server, which is effectively both a client and a server).
   Unlike most other RTSP commands, it is not defined when sent to a
   (pure) RTSP server.)

   Possible applications of the "REGISTER" command include:




<span class="grey">Finlayson               Expires October 19, 2014                [Page 2]</span></pre>
<hr class="noprint" style="width: 96ex;" align="left"><!--NewPage--><pre class="newpage"><a name="page-3" id="page-3" href="#page-3" class="invisible"> </a>
<span class="grey">Internet-Draft         The RTSP "REGISTER" Command            April 2014</span>


   Initialization of a proxy server
           A RTSP proxy server acts as both a client (to access a stream
           from a 'back-end' server) and as a server (to serve this
           stream to one or more 'front-end' clients).  The "REGISTER"
           command can be used to inform a proxy server about a stream
           to deliver from a 'back-end' server.

           This is particularly useful if the proxy server is on the
           public Internet, but the 'back-end' server is on a private
           network (behind a NAT), without a public IP address.  In this
           case the private 'back-end' server can use the "REGISTER"
           command to inform the proxy server about one of its streams.
           In addition, optional parameters - described below - allow
           the proxy server to access this stream via the same TCP
           connection that was used to send the "REGISTER" command, and
           perhaps also to deliver RTP and RTCP packets over this same
           TCP connection (using RTP/RTCP-over-TCP encapsulation, i.e.,
           'interleaving').  Note that this basic approach to NAT
           traversal - TCP tunneling - is just one of the many possible
           NAT traversal techniques for RTSP outlined in
           [<a href="#ref-I-D.ietf-mmusic-rtsp-nat-evaluation">I-D.ietf-mmusic-rtsp-nat-evaluation</a>].  Other more general
           (but also much more complex) approaches are also possible -
           for example [<a href="#ref-I-D.ietf-mmusic-rtsp-nat">I-D.ietf-mmusic-rtsp-nat</a>].

   Initialization of a 'pure' client
           The "REGISTER" command can also be used to inform a 'pure'
           RTSP client (i.e., a RTSP client that does not also act as a
           (proxy) server) about a stream to be played.  This is less
           useful than for a proxy server, because for most (pure) RTSP
           clients, the stream to be played is usually entered by a
           human user (e.g., in entered in a GUI dialog box, or on the
           command-line).  However, it might still be useful for systems
           that have many RTSP clients to choose from, and/or wish to
           control the time at which a RTSP client should request a
           stream.

<span class="h2"><h2><a class="selflink" name="section-3" href="#section-3">3</a>.  An Example</h2></span>

   The following protocol exchange illustrates how a 'back-end' media
   server (on a private network) can inform a proxy server (on the
   public Internet) about one of its streams - in a way that allows the
   proxy server (and thus 'front-end' clients on the public Internet) to
   access the stream.

   Server (10.42.42.42) -&gt; Client (a proxy server: example.com)
       REGISTER rtsp://10.42.42.42/camera RTSP/1.0
       CSeq: 1
       Transport: reuse_connection;



<span class="grey">Finlayson               Expires October 19, 2014                [Page 3]</span></pre>
<hr class="noprint" style="width: 96ex;" align="left"><!--NewPage--><pre class="newpage"><a name="page-4" id="page-4" href="#page-4" class="invisible"> </a>
<span class="grey">Internet-Draft         The RTSP "REGISTER" Command            April 2014</span>


           preferred_delivery_protocol=interleaved;
           proxy_url_suffix=proxiedCamera

   Client (a proxy server: example.com) -&gt; Server (10.42.42.42)
       RTSP/1.0 200 OK
       CSeq: 1


   Because of the "reuse_connection" parameter, the proxy server
   (example.com) can then use the existing RTSP (TCP) connection to
   access the 'back-end' stream "rtsp://10.42.42.42/camera" using the
   usual RTSP "DESCRIBE", "SETUP" and "PLAY" commands.  In addition,
   because of the "preferred_delivery_protocol=interleaved" parameter,
   the "SETUP" command can request RTP/RTCP-over-TCP streaming, using
   the standard "interleaved=" mechanism (<a href="http://tools.ietf.org/html/rfc2326#section-10.12">[RFC2326], section&nbsp;10.12</a>).
   Finally, the "proxy_url_suffix=proxiedCamera" parameter tells the
   proxy server that it can provide access to the stream using the URL:
   "rtsp://example.com/proxiedCamera".

<span class="h2"><h2><a class="selflink" name="section-4" href="#section-4">4</a>.  Optional Transport Parameters</h2></span>

   Three optional parameters (noted in the example above) can be
   specified in the "Transport:" header of a "REGISTER" command:

   reuse_connection
           This parameter is a flag, with no value.
           If this parameter is present, the receiving client SHOULD
           reuse the TCP connection (on which it received the "REGISTER"
           command) for subsequent commands on the Request-URI.

   preferred_delivery_protocol
           Possible values: "udp", "interleaved".  Default value: "udp".
           This parameter specifies the delivery protocol that the
           receiving client SHOULD request when it subsequently sends
           "SETUP" commands for the Request-URI.  The default value,
           "udp", specifies that the client should request normal RTP/
           RTCP-over-UDP streaming.  The value "interleaved" specifies
           that the client should request interleaved RTP/RTCP-over-TCP
           streaming (using the RTSP TCP connection), as described in
           <a href="http://tools.ietf.org/html/rfc2326#section-10.12">[RFC2326], section&nbsp;10.12</a>.

   proxy_url_suffix
           A text string with syntax &lt;path-noscheme&gt; (as defined in
           [<a href="http://tools.ietf.org/html/rfc3986" title="&quot;Uniform Resource Identifier (URI): Generic Syntax&quot;">RFC3986</a>] or [<a href="#ref-I-D.ietf-mmusic-rfc2326bis">I-D.ietf-mmusic-rfc2326bis</a>]).
           This parameter is meaningful only if the receiving client is
           a proxy server.  It specifies a suffix that the proxy server
           SHOULD use in the "rtsp://" URL that (front-end) clients use
           to access the stream.  If the proxy server is already



<span class="grey">Finlayson               Expires October 19, 2014                [Page 4]</span></pre>
<hr class="noprint" style="width: 96ex;" align="left"><!--NewPage--><pre class="newpage"><a name="page-5" id="page-5" href="#page-5" class="invisible"> </a>
<span class="grey">Internet-Draft         The RTSP "REGISTER" Command            April 2014</span>


           supplying a stream with this same URL suffix, then it SHOULD
           return an error (e.g., "451 Invalid parameter") in response
           to the "REGISTER" request.

<span class="h2"><h2><a class="selflink" name="section-5" href="#section-5">5</a>.  Comparison with the "ANNOUNCE" command</h2></span>

   RTSP 1.0[RFC2326] defined a command - named "ANNOUNCE" - that could
   be used to notify a server about a new stream.  The "ANNOUNCE"
   command worked by including - as part of the command - a SDP[RFC4566]
   description for the stream.  A subsequent RTSP command would then be
   used to 'inject' media (as RTP/RTCP packets) into the server, which
   would then make this media available to other RTSP clients.
   Unfortunately the RTSP 1.0 standard did not fully specify how this
   would work; in particular, which RTSP command should be used to
   inject media into the server.  Although the "RECORD" command appeared
   to be the most logical choice, most implementations of this mechanism
   used the "PLAY" command instead.  Because this mechanism was not
   fully specified in RTSP 1.0 (and not extensively used), both the
   "ANNOUNCE" and "RECORD" commands were removed from the RTSP 2.0
   specification[I-D.ietf-mmusic-rfc2326bis]).

   Nonetheless, some commercial RTSP servers did implement this
   mechanism, which was useful for serving streams that originate from a
   private network (behind a NAT).  Such a stream could be "ANNOUNCE"d
   and then injected into a RTSP server located on the public Internet.
   However, implementing this mechanism added a lot of complexity to the
   RTSP server, because it needed to be able to process incoming SDP
   descriptions and RTP/RTCP streams, in addition to its usual
   functionality of generating outgoing SDP descriptions and RTP/RTCP
   streams.  In contrast, the "REGISTER" command, described in this
   document, is simpler and much easier to implement, because it
   requires merely adding familiar RTSP client functionality to the
   server - i.e., implementing a RTSP proxy server.

   The "REGISTER" command also simplifies the media source application,
   because it does not have to rely upon having to "ANNOUNCE" and
   'inject' its data into a separate server.  Instead, the media source
   application can simply be a RTSP server of its own.  RTSP clients on
   the same network can access the stream directly (just like any other
   RTSP stream), but if the media source application also wishes to have
   its stream relayed via a separate server (e.g., across a NAT), then
   it can do so simply by adding a small piece of extra code that sends
   a "REGISTER" command to this server.

<span class="h2"><h2><a class="selflink" name="section-6" href="#section-6">6</a>.  IANA Considerations</h2></span>

   If this proposal were adopted as an IETF standard, then two IANA
   registries would need to be updated:



<span class="grey">Finlayson               Expires October 19, 2014                [Page 5]</span></pre>
<hr class="noprint" style="width: 96ex;" align="left"><!--NewPage--><pre class="newpage"><a name="page-6" id="page-6" href="#page-6" class="invisible"> </a>
<span class="grey">Internet-Draft         The RTSP "REGISTER" Command            April 2014</span>


   o  "RTSP Commands".  (This registry is currently defined for
      RTSP 1.0[RFC2326], and proposed for
      RTSP 2.0[I-D.ietf-mmusic-rfc2326bis].)

   o  "Transport Parameters" (This registry was not defined for
      RTSP 1.0, but has been proposed for RTSP 2.0.)

<span class="h2"><h2><a class="selflink" name="section-7" href="#section-7">7</a>.  Security Considerations</h2></span>

   The addition of this new command adds no additional threat to
   existing RTSP clients (or servers), because they will simply reject
   any incoming "REGISTER" command (a command that they do not handle)
   with an error code.

   However, for a proxy server, the "REGISTER" command causes it to
   access (and then potentially serve) a new stream, which is more
   powerful functionality than the normal server functionality of
   serving existing streams (by implementing the regular RTSP
   "DESCRIBE", "SETUP", "PLAY" etc. commands).  Therefore any proxy
   server on the public Internet that implements the "REGISTER" command
   SHOULD implement access control for this command, even if it does not
   implement any access control for "DESCRIBE", "SETUP", "PLAY" etc.

<span class="h2"><h2><a class="selflink" name="section-8" href="#section-8">8</a>.  References</h2></span>

<span class="h3"><h3><a class="selflink" name="section-8.1" href="#section-8.1">8.1</a>.  Normative References</h3></span>

   [<a name="ref-I-D.ietf-mmusic-rfc2326bis" id="ref-I-D.ietf-mmusic-rfc2326bis">I-D.ietf-mmusic-rfc2326bis</a>]
              Schulzrinne, H., Rao, A., Lanphier, R., Westerlund, M.,
              and M. Stiemerling, "Real Time Streaming Protocol 2.0
              (RTSP)", <a href="http://tools.ietf.org/html/draft-ietf-mmusic-rfc2326bis-28">draft-ietf-mmusic-rfc2326bis-28</a> (work in
              progress), October 2011.

   [<a name="ref-RFC2119" id="ref-RFC2119">RFC2119</a>]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", <a href="http://tools.ietf.org/html/bcp14">BCP 14</a>, <a href="http://tools.ietf.org/html/rfc2119">RFC 2119</a>, March 1997.

   [<a name="ref-RFC2326" id="ref-RFC2326">RFC2326</a>]  Schulzrinne, H., Rao, A., and R. Lanphier, "Real Time
              Streaming Protocol (RTSP)", <a href="http://tools.ietf.org/html/rfc2326">RFC 2326</a>, April 1998.

   [<a name="ref-RFC3986" id="ref-RFC3986">RFC3986</a>]  Berners-Lee, T., Fielding, R., and L. Masinter, "Uniform
              Resource Identifier (URI): Generic Syntax", STD 66, <a href="http://tools.ietf.org/html/rfc3986">RFC</a>
              <a href="http://tools.ietf.org/html/rfc3986">3986</a>, January 2005.









<span class="grey">Finlayson               Expires October 19, 2014                [Page 6]</span></pre>
<hr class="noprint" style="width: 96ex;" align="left"><!--NewPage--><pre class="newpage"><a name="page-7" id="page-7" href="#page-7" class="invisible"> </a>
<span class="grey">Internet-Draft         The RTSP "REGISTER" Command            April 2014</span>


<span class="h3"><h3><a class="selflink" name="section-8.2" href="#section-8.2">8.2</a>.  Informative References</h3></span>

   [<a name="ref-I-D.ietf-mmusic-rtsp-nat-evaluation" id="ref-I-D.ietf-mmusic-rtsp-nat-evaluation">I-D.ietf-mmusic-rtsp-nat-evaluation</a>]
              Westerlund, M. and T. Zeng, "The Evaluation of Different
              Network Address Translator (NAT) Traversal Techniques for
              Media Controlled by Real-time Streaming Protocol (RTSP)",
              <a href="http://tools.ietf.org/html/draft-ietf-mmusic-rtsp-nat-evaluation-13">draft-ietf-mmusic-rtsp-nat-evaluation-13</a> (work in
              progress), February 2014.

   [<a name="ref-I-D.ietf-mmusic-rtsp-nat" id="ref-I-D.ietf-mmusic-rtsp-nat">I-D.ietf-mmusic-rtsp-nat</a>]
              Goldberg, J., Westerlund, M., and T. Zeng, "A Network
              Address Translator (NAT) Traversal Mechanism for Media
              Controlled by Real-Time Streaming Protocol (RTSP)", <a href="http://tools.ietf.org/html/draft-ietf-mmusic-rtsp-nat-20">draft-</a>
              <a href="http://tools.ietf.org/html/draft-ietf-mmusic-rtsp-nat-20">ietf-mmusic-rtsp-nat-20</a> (work in progress), February 2014.

   [<a name="ref-RFC4566" id="ref-RFC4566">RFC4566</a>]  Handley, M., Jacobson, V., and C. Perkins, "SDP: Session
              Description Protocol", <a href="http://tools.ietf.org/html/rfc4566">RFC 4566</a>, July 2006.

Author's Address

   Ross Finlayson
   Live Networks, Inc.
   650 Castro St., suite 120-196
   Mountain View, CA  94041
   USA

   Email: finlayson@live555.com
   URI:   <a href="http://www.live555.com/">http://www.live555.com/</a>























Finlayson               Expires October 19, 2014                [Page 7]

</pre><br>
    <span class="noprint"><small><small>Html markup produced by rfcmarkup 1.115, available from
      <a href="https://tools.ietf.org/tools/rfcmarkup/">https://tools.ietf.org/tools/rfcmarkup/</a>
    </small></small></span>
  </div>


</body></html>